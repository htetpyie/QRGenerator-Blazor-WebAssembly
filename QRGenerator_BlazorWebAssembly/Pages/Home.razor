@page "/"
@using QRCoder
@using QRGenerator_BlazorWebAssembly.Services
@inject QRCodeService _qrService

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 mt-4 bg-light">
            <img src="@QRImage" width="300" height="300"/>
        </div>
        <div class="col-md-6 mt-4">
                <div class="mb-3">
                    <label for="select-box" class="form-label">Select QR Type</label>
                    <select class="form-control" id="select-box" @onchange="OnSelectChange">
                        @foreach (var qr in Enum.GetValues<EnumQrType>())
                        {
                            <option value="@qr">@qr.GetName()</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="qr-value"  class="form-label">QR Value</label>
                    <input type="text"  @onchange="OnInputChange" class="form-control" id="qr-value">
                </div>

        </div>
    </div>
</div>

@code{

    private QRCodeRequestModel Request { get; set; } = new();
    private string? QRImage { get; set; }

    protected override void OnInitialized()
    {
        Request ??= new();
        GenerateQR();
    }

    private void OnSelectChange(ChangeEventArgs e)
    {
        var value = e?.Value?.ToString() ?? EnumQrType.Text.ToString();
        Request.QRType = value!.ToEnum<EnumQrType>();
        GenerateQR();
    }
    
    private void OnInputChange(ChangeEventArgs e)
    {
        Request.QRValue = e?.Value?.ToString()!;
        GenerateQR();
    }

    private void GenerateQR()
    {
        var response = _qrService.GenerateQR(Request);
        QRImage = string.Format("data:image/svg+xml;base64,{0}", response?.Base64String);
    }

}