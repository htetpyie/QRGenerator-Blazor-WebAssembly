@page "/"
@using QRCoder
@using QRGenerator_BlazorWebAssembly.Services
@inject QRCodeService _qrService

<div class="container bg-danger mt-4">
    <div class="row bg-success">
        <div class="col-md-6 bg-light">
            This is QR
            <img src="@QRImage" width="200" height="200"/>
        </div>
        <div class="col-md-6">
            <form>
                <div class="mb-3">
                    <label for="select-box" class="form-label">Select QR Type</label>
                    <select class="form-control" id="select-box" @bind-value="Request.QRType">
                        @foreach (var qr in Enum.GetValues<EnumQrType>())
                        {
                        <option value="@(qr == EnumQrType.Text)">@qr</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="exampleInputPassword1" class="form-label">Password</label>
                    <input type="password" class="form-control" id="exampleInputPassword1">
                </div>
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="exampleCheck1">
                    <label class="form-check-label" for="exampleCheck1">Check me out</label>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
</div>

@code{

    private QRCodeRequestModel Request { get; set; } = new();
    private string? QRImage { get; set; }
    
    protected override void OnInitialized()
    {
        Request ??= new();
        Request = new QRCodeRequestModel
        {
            Text = "Enter your text",
            //Logo = new SvgQRCode.SvgLogo("wwwroot/favicon.png")
        };
        var response = _qrService.GenerateQR(Request);
        QRImage = string.Format("data:image/svg+xml;base64,{0}", response?.Base64String);
    }

}